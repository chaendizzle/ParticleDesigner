<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_menuElement</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// add submenus
event_inherited();

W = getTypeMenuW();
border = 4;

submenus = ds_list_create();

tabs = ds_list_create();

// top bar
addSubmenu(submenus, id, createTextRect(0, 0, W, 30, "Lifetime", fnt_subtitle, c_black, c_ltgray, c_black, 1, 1, 0));

// lifetime
(addSubmenu(submenus, id, createTextRect(4, 32, 0, 18, "Duration", fnt_kindabig, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
(addSubmenu(submenus, id, createTextRect(14, 36 + 18, 0, 18, "Min", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
(addSubmenu(submenus, id, createTextRect(14, 36 + 36, 0, 18, "Max", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
lifeMin = addSubmenu(submenus, id, createNumBox(44, 36 + 18, 32, 18, "30", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
lifeMax = addSubmenu(submenus, id, createNumBox(44, 36 + 36, 32, 18, "30", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));

// step
(addSubmenu(submenus, id, createTextRect(4, 96, 0, 18, "Create Each Step", fnt_kindabig, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
(addSubmenu(submenus, id, createTextRect(14, 100 + 18, 0, 18, "Amt", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
(addSubmenu(submenus, id, createTextRect(14, 100 + 40, 0, 18, "Type", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
stepAmt = addSubmenu(submenus, id, createNumBox(44, 100 + 18, 32, 18, "0", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
stepDropdown = addSubmenu(submenus, id, createDropdown(50, 100 + 40, 120, 18, tabs, fnt_kindasmall, c_black, c_gray, c_black, 1, 1, 1));

// death
(addSubmenu(submenus, id, createTextRect(4, 160, 0, 18, "Create On Death", fnt_kindabig, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
(addSubmenu(submenus, id, createTextRect(14, 164 + 18, 0, 18, "Amt", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
(addSubmenu(submenus, id, createTextRect(14, 164 + 40, 0, 18, "Type", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0))).halign = fa_left;
deathAmt = addSubmenu(submenus, id, createNumBox(44, 164 + 18, 32, 18, "0", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
deathDropdown = addSubmenu(submenus, id, createDropdown(50, 164 + 40, 120, 18, tabs, fnt_kindasmall, c_black, c_gray, c_black, 1, 1, 1));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update tabs
ds_list_clear(tabs);
ds_list_add(tabs, "Nothing");
for (var i = 0; i &lt; ds_list_size(parent.tabs); i++)
{
    var tab = parent.tabs[| i];
    ds_list_add(tabs, tab[| TAB_NAME]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// add to map:
// life
//     min
//     max
// step
//     amt
//     tabList
// death
//     amt
//     tabList

var life = ds_map_create();
ds_map_add_map(info, "life", life);
life[? "min"] = lifeMin.value;
life[? "max"] = lifeMax.value;

var step = ds_map_create();
ds_map_add_map(info, "step", step);
step[? "amt"] = stepAmt.value;
step[? "tabList"] = noone;
if (stepDropdown.selected &gt;= 1)
{
    step[? "tabList"] = parent.tabs[| stepDropdown.selected - 1];
}

var death = ds_map_create();
ds_map_add_map(info, "death", death);;
death[? "amt"] = deathAmt.value;
death[? "tabList"] = noone;
if (deathDropdown.selected &gt;= 1)
{
    death[? "tabList"] = parent.tabs[| deathDropdown.selected - 1];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update sizes of this menu and children
for (var i = 0; i &lt; ds_list_size(submenus); i++)
{
    var inst = submenus[| i];
    with (inst)
    {
        event_user(UPDATE_SIZES);
    }
}

// find max height of any element
var maxH = 0;
for (var i = 0; i &lt; ds_list_size(submenus); i++)
{
    var inst = submenus[| i];
    if (inst.RelY + inst.H &gt; maxH)
    {
        maxH = inst.RelY + inst.H;
    }
}

// surround that element with a border
H = maxH + (2 * border);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// needs to be active to act
if(!active)
{
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the background
draw_set_color(c_ltgray);
draw_set_alpha(1);
draw_rectangle(X, Y, X + W, Y + H, false);
// draw the bottom separator
draw_set_color(c_dkgray);
draw_rectangle(X, Y + H - border, X + W, Y + H, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
