<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>obj_menuElement</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// add submenus
event_inherited();

W = getTypeMenuW();
border = 4;

submenus = ds_list_create();

// top bar
addSubmenu(submenus, id, createTextRect(0, 0, W, 30, "Transform", fnt_subtitle, c_black, c_ltgray, c_black, 1, 1, 0));

// scale
addSubmenu(submenus, id, createTextRect(16, 32, 32, 18, "Scale", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0));

addSubmenu(submenus, id, createTextRect(0, 32 + 18, 18, 18, "X", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0));
addSubmenu(submenus, id, createTextRect(0, 32 + 36, 18, 18, "Y", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0));

addSubmenu(submenus, id, createNumBox(16, 32 + 18, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
addSubmenu(submenus, id, createNumBox(16, 32 + 36, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));

// size
addSubmenu(submenus, id, createTextRect(56 + 20, 32, 32, 18, "Size", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0));

var textrect = noone;
textrect = createTextRect(56, 32 + 18, 18, 18, "X", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
textrect = createTextRect(56, 32 + 36, 18, 18, "Y", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
textrect = createTextRect(56, 32 + 54, 18, 18, "Inc", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
textrect = createTextRect(56, 32 + 72, 18, 18, "Wig", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);

addSubmenu(submenus, id, createNumBox(56 + 20, 32 + 18, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
addSubmenu(submenus, id, createNumBox(56 + 20, 32 + 36, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
addSubmenu(submenus, id, createNumBox(56 + 20, 32 + 54, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
addSubmenu(submenus, id, createNumBox(56 + 20, 32 + 72, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));

// angle
addSubmenu(submenus, id, createTextRect(68 + 56 + 20, 32, 32, 18, "Angle", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0));

var textrect = noone;
textrect = createTextRect(68 + 56, 32 + 18, 18, 18, "Min", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
textrect = createTextRect(68 + 56, 32 + 36, 18, 18, "Max", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
textrect = createTextRect(68 + 56, 32 + 54, 18, 18, "Inc", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
textrect = createTextRect(68 + 56, 32 + 72, 18, 18, "Wig", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);

addSubmenu(submenus, id, createNumBox(68 + 56 + 20, 32 + 18, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
submenus[| ds_list_size(submenus) - 1].tag = "A";
addSubmenu(submenus, id, createNumBox(68 + 56 + 20, 32 + 36, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
submenus[| ds_list_size(submenus) - 1].tag = "B";
addSubmenu(submenus, id, createNumBox(68 + 56 + 20, 32 + 54, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));
addSubmenu(submenus, id, createNumBox(68 + 56 + 20, 32 + 72, 32, 18, "1", fnt_kindasmall, c_white, c_dkgray, c_black, c_white, 1, 1, 1, 0.5));

// angle spinner
addSubmenu(submenus, id, createAngleSlider(68 + 68 + 56 + 20, 32 + 20 + 20, 20, true, c_black, c_white, c_dkgray, c_white, 1, 1, 1, 0.5));

// rel checkbox
textrect = createTextRect(68 + 68 + 56, 32 + 72, 18, 18, "Rel", fnt_kindasmall, c_black, c_white, c_white, 1, 0, 0);
textrect.halign = fa_right;
addSubmenu(submenus, id, textrect);
addSubmenu(submenus, id, createCheckbox(68 + 68 + 56 + 20, 32 + 72, 18, 18, c_red, c_dkgray, c_black, 1, 1, 1));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// update sizes of this menu and children
for (var i = 0; i &lt; ds_list_size(submenus); i++)
{
    var inst = submenus[| i];
    with (inst)
    {
        event_user(UPDATE_SIZES);
    }
}

// find max height of any element
var maxH = 0;
for (var i = 0; i &lt; ds_list_size(submenus); i++)
{
    var inst = submenus[| i];
    if (inst.RelY + inst.H &gt; maxH)
    {
        maxH = inst.RelY + inst.H;
    }
}

// surround that element with a border
H = maxH + (2 * border);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw the background
draw_set_color(c_ltgray);
draw_set_alpha(1);
draw_rectangle(X, Y, X + W, Y + H, false);
// draw the bottom separator
draw_set_color(c_dkgray);
draw_rectangle(X, Y + H - border, X + W, Y + H, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
